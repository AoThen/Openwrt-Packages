name: Build GL-MT2500 IPK New

on:
  workflow_dispatch:
    inputs:
      pkgname:
        type: choice
        required: true
        default: "luci-app-adguardhome"
        options:
          - luci-app-adguardhome
          - ALLAPP
          - openclash
          - passwall
          - passwall2
          - passwall_packages
          - luci-theme-argon
          - luci-app-cloudflarespeedtest
          - luci-app-mosdns
          - luci-app-alist
          - NetSpeedTest
          - smartdns
      packages:
        required: false
        type: boolean
        default: true
      artifact:
        required: false
        type: boolean
        default: true


jobs:
  build_package:
    permissions:
      actions: write #  to cancel/stop running workflows (styfle/cancel-workflow-action)
      contents: write #  to create release tags (cycjimmy/semantic-release-action)
    runs-on: ubuntu-20.04
    steps:
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q)
          sudo -E apt -yqq update
          sudo -E apt -yqq purge $(sed -n "1{s/\r$//g;p;q}" $GITHUB_WORKSPACE/Depends.txt)
          sudo -E apt -yqq full-upgrade
          sudo -E apt -yqq install $(sed -n "2{s/\r$//g;p;q}" $GITHUB_WORKSPACE/Depends.txt)
          sudo -E apt -yqq autoremove --purge
          sudo -E apt -yqq autoclean
          sudo -E apt -yqq clean
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"
          sudo -E rm -rf $(sed -n "3{s/\r$//g;p;q}" $GITHUB_WORKSPACE/Depends.txt)
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Checkout
        uses: actions/checkout@main

      - name: build ipk
        id: build
        env:
          PKGNAME: ${{ inputs.pkgname }}
          EMAIL: ${{ secrets.EMAIL }}
          NAME: ${{ secrets.NAME }}
        run: |
          cd $GITHUB_WORKSPACE
          chmod +x ./build_ipks.sh
          ./build_ipks.sh

      - name: Print
        id: printipk
        run: |
          # tree $GITHUB_WORKSPACE/openwrt-sdk/bin/packages/
          find . -name "*.ipk" -print

      - name: Copy
        id: copyipks
        run: |
          find $GITHUB_WORKSPACE/openwrt-sdk/bin -name "*.ipk" -exec cp -f {} "./buildsource" \;

      - name: Artifact
        uses: actions/upload-artifact@main
        if: ${{ inputs.packages }}
        with:
          name: ${{ inputs.pkgname }}
          path: |
            ./buildsource

      - name: Commit packages
        if: ${{ inputs.packages }}
        run: |
          git config --local user.email ${{ secrets.EMAIL }}
          git config --local user.name ${{ secrets.NAME }}
          git clone  --depth 1 -b Packages https://github.com/AoThen/Openwrt-Packages --single-branch
          cd Openwrt-Packages
          rm -rf ${{ inputs.pkgname }}
          mkdir ${{ inputs.pkgname }}
          cp -rf $GITHUB_WORKSPACE/openwrt-sdk/bin/packages/* ${{ inputs.pkgname }}/

          git add .
          Emoji=("üéâ" "‚ú®" "üéÅ" "üéà" "üéÑ" "üçì" "üçï" "üçâ" "üå¥" "üöÄ" "‚õÖ" "üåà" "‚ù§Ô∏è")
          git commit -m "${Emoji[$[$RANDOM % ${#Emoji[@]}]]}update at $(TZ='Asia/Shanghai' date +%Y-%m-%d)${Emoji[$[$RANDOM % ${#Emoji[@]}]]}"
          git push "https://${{ secrets.NAME }}:${{ github.token }}@github.com/${{ github.repository }}.git" Packages

      - name: Delete workflow runs
        uses: AoThen/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 5
