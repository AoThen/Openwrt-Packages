name: Build GL-MT2500 IPK New

env:
  TZ: Asia/Shanghai

on:
  workflow_dispatch:
    inputs:
      pkgname:
        type: choice
        required: true
        default: "luci-app-alist"
        options:
          - openclash
          - passwall
          - passwall2
          - passwall_packages
          - smartdns
          - NetSpeedTest
          - luci-app-mosdns
          - luci-app-alist
      packages:
        required: false
        type: boolean
        default: true
      artifact:
        required: false
        type: boolean
        default: true

jobs:
  build_package:
    permissions:
      actions: write #  to cancel/stop running workflows (styfle/cancel-workflow-action)
      contents: write #  to create release tags (cycjimmy/semantic-release-action)
    runs-on: ubuntu-20.04
    steps:
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php
          sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install libfuse-dev build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget golang
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Checkout
        uses: actions/checkout@master

      - name: build ipk
        id: build
        env:
          PKGNAME: ${{ inputs.pkgname }}
          EMAIL: ${{ secrets.EMAIL }}
          NAME: ${{ secrets.NAME }}
        run: |
          cd $GITHUB_WORKSPACE
          chmod +x ./build_ipks.sh
          ./build_ipks.sh

      - name: Artifact
        uses: actions/upload-artifact@main
        if: ${{ inputs.packages }}
        with:
          name: ${{ inputs.pkgname }}
          path: |
            ./buildsource
            $GITHUB_WORKSPACE/openwrt-sdk/.config


      - name: Commit packages
        if: ${{ inputs.packages }}
        run: |
          git config --local user.email ${{ secrets.EMAIL }}
          git config --local user.name ${{ secrets.NAME }}
          git clone  --depth 1 -b Packages https://github.com/AoThen/Openwrt-Packages --single-branch
          cd Openwrt-Packages
          rm -rf ${{ inputs.pkgname }}
          mkdir ${{ inputs.pkgname }}
          cp -rf $GITHUB_WORKSPACE/openwrt-sdk/bin/* ${{ inputs.pkgname }}/

          git add .
          Emoji=("üéâ" "‚ú®" "üéÅ" "üéà" "üéÑ" "üçì" "üçï" "üçâ" "üå¥" "üöÄ" "‚õÖ" "üåà" "‚ù§Ô∏è")
          git commit -m "${Emoji[$[$RANDOM % ${#Emoji[@]}]]}update at $(TZ='Asia/Shanghai' date +%Y-%m-%d)${Emoji[$[$RANDOM % ${#Emoji[@]}]]}"
          git push "https://${{ secrets.NAME }}:${{ github.token }}@github.com/${{ github.repository }}.git" Packages


      # - name: Delete workflow runs
      #   uses: Mattraks/delete-workflow-runs@v2
      #   with:
      #     token: ${{ github.token }}
      #     repository: ${{ github.repository }}
      #     retain_days: 30
      #     keep_minimum_runs: 8

      - name: Delete workflow runs
        uses: AoThen/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 5